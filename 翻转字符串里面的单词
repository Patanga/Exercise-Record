/*在leetcode上写的字符串永远都没法正常搞出来，不是内存有问题就是(null)....不知道犯啥惹啥了。。。。
https://leetcode-cn.com/problems/reverse-words-in-a-string/
*/

char * reverseWords(char * s){
    int l1, l2=0;
    l1 = strlen(s);

//malloc格式要记对：size of(char)无星号，还要用'\0'封口？？？。。。
    char *rev = (char*)malloc(sizeof(char)*2*(l1+1));
    char *temp = (char*)malloc(sizeof(char)*(l1+1));
    rev[l1] = '\0';

    int i, j;
    // 记得要允许等于0
    for(i = l1-1; i >= 0; i--){
        if(s[i] != ' '){
            //j的条件怎么写才比较好->判断条件的顺序调转一下，以免读取到不可读取的地方
            for(j = i; j >= 0 && s[j] != ' '; j--){
            }
            j++;

            l2+= ((i-j)+1);

            for(int m = 0; m < (i-j+1); m++){
                temp[m] = s[m+j];
                rev[l2-((i-j+1))+m] = s[m+j];
            }

            rev[l2] = ' ';
            l2++;
            i = j-1;
        }
    }
    rev[l2-1] = '\0';
    return rev;
}



/*
char * reverseWords(char * s){
    int length;
    length = strlen(s);

    char s_rev[length];
    s_rev = "test";
    return s_rev;
    
}
*/

//  参考题解
char * reverseWords(char * s){
    int len = strlen(s);                                    //字符串长度
    int top = 0;                                            //栈顶指针
    int n = 0;

    if(len == 0)                                            //字符串为空
        return s;
    
    char *res = (char*)malloc(sizeof(char) * (len + 1));    //为输出数组分配空间
    res[len] = '\0';
    char *stack =(char*)malloc(sizeof(char) * (len + 1));   //为栈分配空间

    for(int i=len-1; i >= 0; i--){                          //遍历字符串
        while(i >= 0 && s[i] == ' '){                       //遇到空格跳过
            i--;
        }
        while(i >= 0 && s[i] != ' '){                       //将字符串压入栈
            stack[top] = s[i];
            top++;
            i--;
        }
        while(top > 0){                                     //从栈中取出字符
            res[n] = stack[top-1];
            top--;
            n++;
        }
        res[n] = ' ';                                       //每个单词间隔一个空格
        n++;
    }
    n--;
    while(n >= 0 && res[n] == ' ')                          //输出字符串末尾会有空格，循环去除
        n--;
    res[n+1] = '\0';                                        //输出字符串结束

    return res;
}

作者：condescending-jangbuv
链接：https://leetcode-cn.com/problems/reverse-words-in-a-string/solution/151-fan-zhuan-zi-fu-chuan-li-de-dan-ci-b-vzqa/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
