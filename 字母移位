/*第1期：字符串操作(1/3): https://leetcode-cn.com/problems/shifting-letters/
*/

//  难点：时空复杂度……

/*
从后往前算，O(n)
char * shiftingLetters(char * s, int* shifts, int shiftsSize){
    int tmp=0;
    for(int i=shiftsSize-1;i>=0;i--){
        tmp = (tmp+shifts[i])%26;
        s[i]= tmp > 'z'- s[i]? 'a'+tmp-'z'-1+s[i]:s[i]+tmp;
   }
    return s;
}
*/

char * shiftingLetters(char * s, int* shifts, int shiftsSize){
    int n = 0, i = 0, j = 0;
    for(i = 0; i < shiftsSize; i++){
        for(j = 0; j <= i; j++){
            shifts[i] = shifts[i] % 26;

            //  Important
            if(s[j] + shifts[i] > 'z'){
                s[j] = s[j] + shifts[i] - 'z' + 'a' - 1;
            }
            else{
                s[j] = s[j] + shifts[i];
            }
        }
    }

    return s;
}
