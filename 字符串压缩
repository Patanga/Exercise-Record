/* 字符串操作老是null。。。。
https://leetcode-cn.com/problems/compress-string-lcci/
*/

#define BIGGEST 50000
char* compressString(char* S){
    unsigned long int l1, l2 = 0;
    l1 = strlen(S);
    char alphatmp;
    int numtmp = 0;

    char newS[2*BIGGEST];
    if(l1 <= 2){
        return S;
    }

    int i,j;
    for(i = 0; i < l1; i++){
        alphatmp = S[i];
        for(j = i + 1; S[j] == S[i] || j < l1; j++){
            numtmp ++;
        }
        newS[l2] = S[i];
        l2++;
        newS[l2] = numtmp;
        l2++;
        i = j;
        numtmp = 0;
    }

    l2 = strlen(newS);
    if(l1 > l2){
        return newS;
    }
    return S;
}

/*
char* compressString(char* S){
    int len=strlen(S);
    if(len==1||len==2) return S;
    char *res=(char*)malloc(sizeof(char)*(2*len));
    int i,j,k=0;
    for(i=j=0;i<len;){
        res[k++]=S[i];
        while(j<len&&S[i]==S[j])j++;
        int temp=j-i;   //计算字符个数
        int c=log10(temp)+1;    //计算位数
        k=k+c-1;
        while(temp){
            res[k--]=temp%10+'0';   //从个位开始赋值
            temp/=10;
        }
        k=k+c+1;    //重新定位k
        i=j;
    }
    res[k]='\0';
    int len_res=strlen(res);
    if(len_res<len) return res;
    return S;
}

作者：snailclimb-2
链接：https://leetcode-cn.com/problems/compress-string-lcci/solution/zi-fu-chuan-ya-suo-by-snailclimb-2/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
*/
